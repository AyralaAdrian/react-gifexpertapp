{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/UseFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gfs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","UseFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OACI,sBAAMC,SAPW,SAACC,GAClBA,EAAEC,iBACFN,GAAc,SAAAO,GAAI,OAAKL,GAAL,mBAAoBK,OACtCJ,EAAc,KAId,SACI,uBACIK,KAAK,OACLC,MAAOP,EACPQ,SAfc,SAACL,GACvBF,EAAcE,EAAEM,OAAOF,a,+BCHlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGDI,MAAMF,GAHL,cAGbG,EAHa,gBAICA,EAAKC,OAJN,uBAIZC,EAJY,EAIZA,KACDC,EAAKD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCDPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAIhC,OACI,sBAAKc,UAAU,2CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,mBAAGI,UAAU,OAAb,SAAqBJ,QCLpBO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GAC3B,MAA0BZ,mBAAS,CAC/BmB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACRxB,EAASC,GACJwB,MAAM,SAAAd,GACHY,EAAS,CACLf,KAAMG,EACNU,SAAQ,SAGnB,CAACpB,IAEGqB,EDb0BI,CAAazB,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACE,qCACE,oBAAIJ,UAAU,sCAAd,SAAqDhB,IACpDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEOH,EAAOJ,KAAK,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEZpBe,EAAe,WAGxB,MAAoCtC,mBAAS,CAAC,cAA9C,mBAAOuC,EAAP,KAAmBxC,EAAnB,KAMA,OACI,qCACI,8CAGA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAGQwC,EAAWlB,KAAK,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCnB9B4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f6a52603.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        setCategories(cats => [inputValue, ...cats]);\r\n        setInputValue('');\r\n   }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type='text'\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n\r\n    setCategories:PropTypes.func.isRequired\r\n}","\r\n\r\n\r\nexport const getGifs = async(category) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=nvKpI2jPqJM0meTifDeLokf4lD9ZiIYl`\r\n    const resp= await fetch(url);\r\n    const {data}= await resp.json();\r\n    const gfs= data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gfs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title,url }) => {\r\n\r\n   // console.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInUp\">\r\n            <img src={url} alt={title} />\r\n            <p className=\"card\">{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { UseFetchGifs } from '../hooks/UseFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = UseFetchGifs(category);\r\n\r\n    return (\r\n      <> \r\n        <h3 className=\"animate__animated animate__fadeInUp\">{category}</h3>\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n        <div className=\"card-grid\">      \r\n            {\r\n               images.map( img =>(\r\n                    <GifGridItem\r\n                        key={img.id}\r\n                        {...img}\r\n                     />\r\n                ))\r\n            }\r\n        </div>\r\n      </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const UseFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n      data: [],\r\n      loading: true,\r\n  });\r\n\r\n  useEffect(() => {    \r\n    getGifs( category)\r\n        .then( img =>{\r\n            setState({\r\n                data: img,\r\n                loading:false\r\n            });      \r\n        })   \r\n  }, [category])\r\n\r\n  return state; // {data:[], loading:tue}\r\n}\r\n\r\n\r\n","import React, { useState} from 'react'\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball']; \r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    //const handleAdd = () => {\r\n    //    setCategories([...categories, 'HunterX'])// para agregar un elemento al final\r\n    //}\r\n    \r\n    return (\r\n        <>\r\n            <h2>\r\n                GifExpertApp\r\n            </h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/> \r\n\r\n            <ol>\r\n                \r\n                {\r\n                    categories.map( category => (\r\n                         <GifGrid\r\n                         key={category} \r\n                         category={category}\r\n                          />\r\n                    ))\r\n                }\r\n\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}